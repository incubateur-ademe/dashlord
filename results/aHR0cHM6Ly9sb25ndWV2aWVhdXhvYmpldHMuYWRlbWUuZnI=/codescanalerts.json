{"totalCount":1,"grade":"D","repositories":[{"url":"https://github.com/incubateur-ademe/quefairedemesobjets","grade":"D","alerts":[{"number":21,"created_at":"2024-11-14T09:49:13Z","updated_at":"2024-11-19T20:49:10Z","url":"https://api.github.com/repos/incubateur-ademe/quefairedemesobjets/code-scanning/alerts/21","html_url":"https://github.com/incubateur-ademe/quefairedemesobjets/security/code-scanning/21","state":"open","fixed_at":null,"dismissed_by":null,"dismissed_at":null,"dismissed_reason":null,"dismissed_comment":null,"rule":{"id":"js/missing-origin-check","severity":"warning","description":"Missing origin verification in `postMessage` handler","name":"js/missing-origin-check","tags":["correctness","external/cwe/cwe-020","external/cwe/cwe-940","security"],"full_description":"Missing origin verification in a `postMessage` handler allows any windows to send arbitrary data to the handler.","help":"# Missing origin verification in `postMessage` handler\nThe `\"message\"` event is used to send messages between windows. An untrusted window can send a message to a trusted window, and it is up to the receiver to verify the legitimacy of the message. One way of performing that verification is to check the `origin` of the message ensure that it originates from a trusted window.\n\n\n## Recommendation\nAlways verify the origin of incoming messages.\n\n\n## Example\nThe example below uses a received message to execute some code. However, the origin of the message is not checked, so it might be possible for an attacker to execute arbitrary code.\n\n\n```javascript\nfunction postMessageHandler(event) {\n    let origin = event.origin.toLowerCase();\n\n    console.log(origin)\n    // BAD: the origin property is not checked\n    eval(event.data);\n}\n\nwindow.addEventListener('message', postMessageHandler, false);\n\n```\nThe example is fixed below, where the origin is checked to be trusted. It is therefore not possible for a malicious user to perform an attack using an untrusted origin.\n\n\n```javascript\nfunction postMessageHandler(event) {\n    console.log(event.origin)\n    // GOOD: the origin property is checked\n    if (event.origin === 'https://www.example.com') {\n        // do something\n    }\n}\n\nwindow.addEventListener('message', postMessageHandler, false);\n```\n\n## References\n* [Window.postMessage()](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage).\n* [Web message manipulation](https://portswigger.net/web-security/dom-based/web-message-manipulation).\n* [The pitfalls of postMessage](https://labs.detectify.com/2016/12/08/the-pitfalls-of-postmessage/).\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html).\n* Common Weakness Enumeration: [CWE-940](https://cwe.mitre.org/data/definitions/940.html).\n","security_severity_level":"medium"},"tool":{"name":"CodeQL","guid":null,"version":"2.19.3"},"most_recent_instance":{"ref":"refs/heads/main","analysis_key":"dynamic/github-code-scanning/codeql:analyze","environment":"{\"build-mode\":\"none\",\"category\":\"/language:javascript-typescript\",\"language\":\"javascript-typescript\",\"runner\":\"[\\\"ubuntu-latest\\\"]\"}","category":"/language:javascript-typescript","state":"open","commit_sha":"8633462ca1765b5580442657158485000ec036c2","message":{"text":"Postmessage handler has no origin check."},"location":{"path":"static/to_compile/js/iframe.ts","start_line":1,"end_line":1,"start_column":37,"end_column":42},"classifications":[]},"instances_url":"https://api.github.com/repos/incubateur-ademe/quefairedemesobjets/code-scanning/alerts/21/instances"}]}]}